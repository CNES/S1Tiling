variables:
    BUILD_IMAGE_REGISTRY: $CI_REGISTRY/s1-tiling
    LC_ALL: C.UTF-8
    # Set pip's cache inside the project directory since we can only cache local items
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

image: $BUILD_IMAGE_REGISTRY/s1tiling-dockers/s1tiling-dev:ubuntu-otb7.2.0

.common:
    variables:
    cache:
        key: packages
        paths:
        # - $CI_PROJECT_DIR/.cache/pip
        # - S1TilingEnv
        - baseline

    before_script:
    - mkdir -p "${PIP_CACHE_DIR}"
    ## doc generation requires S1Tiling through autodoc
    # => We need to be able to install S1Tiling
    #- find /opt/otb
    - apt-get -y update
    - apt-get -y upgrade
    - python3 --version
    - . /tmp/${S1TILING_VENV}/bin/activate && echo "virtualenv /tmp/${S1TILING_VENV} loaded"
    - . "${OTB_INSTALL_DIRNAME}/otbenv.profile" && echo "OTB loaded from ${OTB_INSTALL_DIRNAME}"
    - gdal-config --version
    - python3 -m pip install --upgrade pip
    - echo $LD_LIBRARY_PATH
    - find / -name "libgdal.so*"
    - ldd /tmp/${S1TILING_VENV}/lib/python*/site-packages/osgeo/_gdal.cpython-36m-x86_64-linux-gnu.so
    - python -c "from osgeo import gdal ; print(gdal.__version__)"
    - ls "${OTB_INSTALL_DIRNAME}"
    # - set
    - echo "installing .[${INSTALL_TYPE}]"
    - python3 -m pip install .[${INSTALL_TYPE}]

.common-doc:
    variables:
        INSTALL_TYPE: docs
    extends: .common

.common-tests:
    variables:
        INSTALL_TYPE: dev
    extends: .common

# Run tests
pytest:
    extends: .common-tests
    stage: test
    script:
    - test -d baseline || mkdir baseline
    - time rclone -L sync s3_otb:s1-tiling/baseline baseline || echo "Oups| no baseline/ on S3"
    - ls baseline
    - time python3 -m pytest --baselinedir=$(readlink -f baseline) --srtmdir=$(readlink -f baseline/MNT/SRTM_30_hgt) -o log_cli_level=info -o log_cli=true --junitxml=report.xml
    artifacts:
        when: always
        reports:
            junit: report.xml

# Test the documentation compiles
test-doc:
    extends: .common-doc
    stage: test
    script:
    - sphinx-build -b html -d _build/doctrees docs _build/html -v
    - mkdir -p test
    - echo "CI_PIPELINE_ID=${CI_PIPELINE_ID}"
    - mv _build/html test/${CI_PIPELINE_ID}
    artifacts:
        name: "$CI_PIPELINE_ID"
        paths:
        - test
        expire_in: 5 days
    except:
    - master
    - develop
    - /^[0-9]+\.[0-9]+.*/

# Upload latest documentation when develop/master branches are updated
pages:
    extends: .common-doc
    stage: deploy
    script:
    - mkdir public
    # TODO: lock access to public
    - rclone copy s3_otb:s1-tiling/www public || echo "Oups| no www/ on S3"
    # Check cache
    - ls public
    - docs/install_and_deploy_doc.sh public
    - rclone copy public s3_otb:s1-tiling/www
    artifacts:
        paths:
        - public
    environment:
        name: generate_docs
    only:
    - master
    - develop
    - /^[0-9]+\.[0-9]+.*/
